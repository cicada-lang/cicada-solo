(E, length) => MyVector(E, length): (E: Type, length: Nat) -> Type
(length) => MyVector(String, length): (length: Nat) -> Type
MyVector(String, 3): Type
(vague E) => MyVector.my_null(vague E): (vague E: Type) -> MyVector(E, 0)
MyVector.my_null(vague Nat): MyVector(Nat, 0)
MyVector.my_null(vague Nat): MyVector(Nat, 0)
MyVector.my_null(vague String): MyVector(String, 0)
MyVector.my_cons(vague Nat, vague 0, 1, MyVector.my_null(vague Nat)): MyVector(Nat, 1)
MyVector.my_cons(vague Nat, vague 0, 1, MyVector.my_null(vague Nat)): MyVector(Nat, 1)
MyVector.my_cons(vague Nat, vague 0, 1, MyVector.my_null(vague Nat)): MyVector(Nat, 1)
MyVector.my_cons(vague String, vague 0, "a", MyVector.my_null(vague String)): MyVector(String, 1)
MyVector.my_cons(vague String, vague 0, "a", MyVector.my_null(vague String)): MyVector(String, 1)
MyVector.my_cons(vague String, vague 0, "a", MyVector.my_null(vague String)): MyVector(String, 1)
MyVector.my_cons(vague String, vague 2, "a", MyVector.my_cons(vague String, vague 1, "b", MyVector.my_cons(vague String, vague 0, "c", MyVector.my_null(vague String)))): MyVector(String, 3)
MyVector.my_cons(vague Nat, vague 0, 1, MyVector.my_null(vague Nat)): MyVector(Nat, 1)
MyVector.my_cons(vague String, vague 0, "a"): MyVector(String, 1)
(vague prev, head, tail) => MyVector.my_cons(vague String, vague prev, head, tail): (vague prev: Nat, head: String, tail: MyVector(String, prev)) -> MyVector(String, add1(prev))
MyVector.my_cons(vague String, vague 0, "a", MyVector.my_null(vague String)): MyVector(String, 1)
refl: Equal(Vector(Nat, 5), vec(1, vec(2, vec(3, vec(4, vec(5, vecnil))))), vec(1, vec(2, vec(3, vec(4, vec(5, vecnil))))))
refl: Equal(MyVector(Nat, 5), MyVector.my_cons(vague Nat, vague 4, 1, MyVector.my_cons(vague Nat, vague 3, 2, MyVector.my_cons(vague Nat, vague 2, 3, MyVector.my_cons(vague Nat, vague 1, 4, MyVector.my_cons(vague Nat, vague 0, 5, MyVector.my_null(vague Nat)))))), MyVector.my_cons(vague Nat, vague 4, 1, MyVector.my_cons(vague Nat, vague 3, 2, MyVector.my_cons(vague Nat, vague 2, 3, MyVector.my_cons(vague Nat, vague 1, 4, MyVector.my_cons(vague Nat, vague 0, 5, MyVector.my_null(vague Nat)))))))
refl: Equal(List(Nat), List.cons(vague Nat, 1, List.cons(vague Nat, 2, List.cons(vague Nat, 3, List.null(vague Nat)))), List.cons(vague Nat, 1, List.cons(vague Nat, 2, List.cons(vague Nat, 3, List.null(vague Nat)))))