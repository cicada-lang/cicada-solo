(_) => MyList(_): (_: Type) -> Type
MyList(Nat): Type
MyList.my_null(returned Nat): MyList(Nat)
MyList.my_null(returned Nat): MyList(Nat)
MyList.my_null(returned String): MyList(String)
MyList.my_null(returned String): MyList(String)
MyList.my_cons(returned Nat, 1, MyList.my_null(returned Nat)): MyList(Nat)
MyList.my_cons(returned Nat, 1, MyList.my_null(returned Nat)): MyList(Nat)
MyList.my_cons(returned Nat, 1, MyList.my_cons(returned Nat, 2, MyList.my_null(returned Nat))): MyList(Nat)
MyList.my_cons(returned Nat, 1, MyList.my_cons(returned Nat, 2, MyList.my_cons(returned Nat, 3, MyList.my_null(returned Nat)))): MyList(Nat)
MyList.my_cons(returned String, "a", MyList.my_null(returned String)): MyList(String)
MyList.my_cons(returned String, "a", MyList.my_cons(returned String, "b", MyList.my_null(returned String))): MyList(String)
MyList.my_cons(returned String, "a", MyList.my_cons(returned String, "b", MyList.my_cons(returned String, "c", MyList.my_null(returned String)))): MyList(String)
refl: Equal(Nat, 3, 3)
refl: Equal(List(Nat), li(1, li(2, li(3, li(4, li(5, li(6, nil)))))), li(1, li(2, li(3, li(4, li(5, li(6, nil)))))))
refl: Equal(List(Nat), li(1, li(2, li(3, li(4, nil)))), li(1, li(2, li(3, li(4, nil)))))
refl: Equal(List(Nat), li(3, li(2, li(1, nil))), li(3, li(2, li(1, nil))))