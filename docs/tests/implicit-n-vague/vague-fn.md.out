(vague A, vague B, vague C, implicit T, x) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), T))): (vague A: Type, vague B: Type, vague C: Type, implicit T: Type, T) -> Pair(List(A), Pair(List(B), Pair(List(C), Type)))
(vague A, vague B, vague C, implicit T, x) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), T))): (vague A: Type, vague B: Type, vague C: Type, implicit T: Type, T) -> Pair(List(A), Pair(List(B), Pair(List(C), Type)))
(vague A, vague B, vague C, implicit T, x) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), T))): (vague A: Type, vague B: Type, vague C: Type, implicit T: Type, T) -> Pair(List(A), Pair(List(B), Pair(List(C), Type)))
(vague A, vague B, vague C, implicit T, x) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), T))): (vague A: Type, vague B: Type, vague C: Type, implicit T: Type, T) -> Pair(List(A), Pair(List(B), Pair(List(C), Type)))
(vague A, vague B, vague C, vague D) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), List.null(vague D)))): (vague A: Type, vague B: Type, vague C: Type, vague D: Type) -> Pair(List(A), Pair(List(B), Pair(List(C), List(D))))
(vague A, vague B, vague C, vague D) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), List.null(vague D)))): (vague A: Type, vague B: Type, vague C: Type, vague D: Type) -> Pair(List(A), Pair(List(B), Pair(List(C), List(D))))
(vague A, vague B, vague C, vague D) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), List.null(vague D)))): (vague A: Type, vague B: Type, vague C: Type, vague D: Type) -> Pair(List(A), Pair(List(B), Pair(List(C), List(D))))
(vague A, vague B, vague C, vague D) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), List.null(vague D)))): (vague A: Type, vague B: Type, vague C: Type, vague D: Type) -> Pair(List(A), Pair(List(B), Pair(List(C), List(D))))
(vague A, vague B, vague C, vague D) => cons(List.null(vague A), cons(List.null(vague B), cons(List.null(vague C), List.null(vague D)))): (vague A: Type, vague B: Type, vague C: Type, vague D: Type) -> Pair(List(A), Pair(List(B), Pair(List(C), List(D))))
