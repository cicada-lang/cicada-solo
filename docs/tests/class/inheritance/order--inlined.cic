class OrderInlined {
  Element: Type
  Under(Element, Element): Type

  reflexive(x: Element): Under(x, x)

  transitive(
    implicit x: Element,
    implicit y: Element,
    Under(x, y),
    implicit z: Element,
    Under(y, z),
  ): Under(x, z)

  antisymmetric(
    implicit x: Element,
    implicit y: Element,
    Under(x, y),
    Under(y, x),
  ): Equal(Element, x, y)
}

// NOTE Inlined definition is the equal to definition by inheritance.

import { Order } from "./order.cic"

compute the(Equal(Type, Order, OrderInlined), refl)
