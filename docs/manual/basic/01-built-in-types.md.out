Type: Type
Type: Type
String: Type
"Hello, World!": String
"Xie Yuheng": String
Trivial: Type
sole: Trivial
sole: Trivial
Pair(String, Trivial): Type
cons("abc", sole): Pair(String, Trivial)
"abc": String
sole: Trivial
Pair(String, Trivial): Type
Pair(String, Trivial): Type
Pair(Type, Pair(String, Trivial)): Type
cons(String, cons("abc", sole)): Pair(Type, Pair(String, Trivial))
exists (x: Pair(Type, Type)) car(x): Type
cons(cons(String, Trivial), "ABC"): exists (x: Pair(Type, Type)) car(x)
cons(cons(Trivial, String), sole): exists (x: Pair(Type, Type)) car(x)
refl: Equal(Type, Pair(String, Trivial), Pair(String, Trivial))
(String) -> Trivial: Type
(Pair(String, Trivial)) -> Pair(Trivial, String): Type
(x) => sole: (String) -> Trivial
(pair1) => cons(sole, car(pair1)): (Pair(String, Trivial)) -> Pair(Trivial, String)
sole: Trivial
cons("abc", sole): Pair(String, Trivial)
cons(sole, "abc"): Pair(Trivial, String)
(T: Type, T) -> T: Type
(T: Type, T) -> T: Type
"abc": String
sole: Trivial
(T, _) => _: (T: Type, T) -> T
Absurd: Type
(target, motive) => from_falsehood_anything(target, motive): (Absurd, motive: Type) -> motive
Equal(String, "abc", "abc"): Type
Equal(Trivial, sole, sole): Type
refl(vague String, vague "abc"): Equal(String, "abc", "abc")
refl(vague Trivial, vague sole): Equal(Trivial, sole, sole)
refl(vague String, vague "abc"): Equal(String, "abc", "abc")
refl(vague Trivial, vague sole): Equal(Trivial, sole, sole)
refl(vague String, vague "abc"): Equal(String, "abc", "abc")
refl(vague Trivial, vague sole): Equal(Trivial, sole, sole)
Equal(String, "abc", "de"): Type
