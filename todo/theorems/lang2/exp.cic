@module lang2

@datatype Exp {
  v(name: String): Exp

  pi(name: String, arg_t: Exp, ret_t: Exp): Exp
  arrow(arg_t: Exp, ret_t: Exp): Exp
  fn(name: String, ret: Exp): Exp
  ap(target: Exp, arg: Exp): Exp

  sigma(name: String, car_t: Exp, cdr_t: Exp): Exp
  pair(car_t: Exp, cdr_t: Exp): Exp
  cons(car: Exp, cdr: Exp): Exp
  car(target: Exp): Exp
  cdr(target: Exp): Exp

  nat: Exp
  zero: Exp
  add1(prev: Exp): Exp
  nat_ind(target: Exp, motive: Exp, base: Exp, step: Exp): Exp

  equal(t: Exp, from: Exp, to: Exp): Exp
  same: Exp
  replace(target: Exp, motive: Exp, base: Exp): Exp

  trivial: Exp
  sole: Exp

  absurd: Exp
  absurd_ind(target: Exp, motive: Exp): Exp

  str: Exp
  quote(str: String): Exp

  type: Exp
  let(name: String, exp: Exp, ret: Exp): Exp
  the(t: Exp, exp: Exp): Exp
}
