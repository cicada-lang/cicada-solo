the_nat_type(_: Trivial): Type { Nat }

class ABC { a: Trivial, b: the_nat_type(a), c: String }

// ABC: Type
// ABC(sole): Type
// ABC(sole, 2): Type
// ABC(sole, 2, "c"): Type

// ABC :> ABC(sole) :> ABC(sole, 2) :> ABC(sole, 2, "c")

// NOTE Maybe we can support named fulfilling.

// abc: ABC(a = sole, b = 2) = {
//   a: sole, b: 2, c: "c"
// }

// abc: ABC(c = "c") = {
//   a: sole, b: 2, c: "c"
// }

abc: ABC(sole, 2) = {
  a: sole, b: 2, c: "c"
}

abc

abc.a
abc.b
abc.c

fulled: ABC(sole, 2, "c") = {
  a: sole, b: 2, c: "c"
}

fulled

fulled.a
fulled.b
fulled.c
