I infer the type to be:
  Morphism(x, y)
But the expected type is:
  Morphism(x, x)

previous:
- f
- compose(x, x, w, f)
- compose(x, x, w, f, compose(y, z, w, g, h))
- Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- (h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- (g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- (f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- (w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- (z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- (y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
- class {
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
}
- class {
  id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
}
- class {
  id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
  id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
}
- class {
  compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
  id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
  id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
}
- class {
  id: (x: Object) -> Morphism(x, x)
  compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
  id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
  id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
}
- class {
  Morphism: (dom: Object, cod: Object) -> Type
  id: (x: Object) -> Morphism(x, x)
  compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
  id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
  id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
}
- class {
  Object: Type
  Morphism: (dom: Object, cod: Object) -> Type
  id: (x: Object) -> Morphism(x, x)
  compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
  id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
  id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
}
- the(Type, class {
  Object: Type
  Morphism: (dom: Object, cod: Object) -> Type
  id: (x: Object) -> Morphism(x, x)
  compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
  id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
  id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
  compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, x, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
})
