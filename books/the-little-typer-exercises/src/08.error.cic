add(x: Nat, y: Nat): Nat {
  nat_rec(x, y, (_prev, almost) => add1(almost))
}

// NOTE increase
incr(x: Nat): Nat {
  nat_rec(x, 1, (_prev, almost) => add(1, almost))
}

add(1)(3)
incr(3)

// NOTE `add(1)` is not equal to `incr` by reflection, we need to prove it.
the(Equal((Nat) -> Nat, add(1), incr), refl)
