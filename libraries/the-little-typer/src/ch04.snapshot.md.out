cons("abc", 123): (_: String) * Nat 
cons(123, "abc"): (_: Nat) * String 
same: Equal(Type, (A: Type, D: Type, pair: (_: A) * D) -> (_: D) * A, (Lemon: Type, Meringue: Type, _: (_: Lemon) * Meringue) -> (_1: Meringue) * Lemon) 
same: Equal(Type, (A: Type, D: Type, _: (_: A) * D) -> (_1: D) * A, (A: Type, D: Type, _: (_: A) * D) -> (_1: D) * A) 
cons("abc", 123): (_1: String) * Nat 
cons(123, 123): (_1: Nat) * Nat 
cons("abc", "abc"): (_1: String) * String 
