class {
  dom: class {
    Object: Type
    Morphism: (dom: Object, cod: Object) -> Type
    id: (x: Object) -> Morphism(x, x)
    compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
    id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
    id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
    compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, y, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
  }
  cod: class {
    Object: Type
    Morphism: (dom1: Object, cod: Object) -> Type
    id: (x: Object) -> Morphism(x, x)
    compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
    id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
    id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
    compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, y, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
  }
  map: (x: dom.Object) -> cod.Object
  fmap: (x: dom.Object, y: dom.Object, f: dom.Morphism(x, y)) -> cod.Morphism(map(x), map(y))
  fmap_respect_compose: (x: dom.Object, y: dom.Object, z: dom.Object, f: dom.Morphism(x, y), g: dom.Morphism(y, z)) -> Equal(cod.Morphism(map(x), map(z)), fmap(x, z, dom.compose(x, y, z, f, g)), cod.compose(map(x), map(y), map(z), fmap(x, y, f), fmap(y, z, g)))
  fmap_respect_id: (x: dom.Object) -> Equal(cod.Morphism(map(x), map(x)), fmap(x, x, dom.id(x)), cod.id(map(x)))
}: Type 
class {
  dom: class {
    Object: Type
    Morphism: (dom: Object, cod: Object) -> Type
    id: (x: Object) -> Morphism(x, x)
    compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
    id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
    id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
    compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, y, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
  }
  cod: class {
    Object: Type
    Morphism: (dom1: Object, cod: Object) -> Type
    id: (x: Object) -> Morphism(x, x)
    compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
    id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
    id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
    compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, y, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
  }
  map: (x: dom.Object) -> cod.Object
  fmap: (x: dom.Object, y: dom.Object, f: dom.Morphism(x, y)) -> cod.Morphism(map(x), map(y))
  fmap_respect_compose: (x: dom.Object, y: dom.Object, z: dom.Object, f: dom.Morphism(x, y), g: dom.Morphism(y, z)) -> Equal(cod.Morphism(map(x), map(z)), fmap(x, z, dom.compose(x, y, z, f, g)), cod.compose(map(x), map(y), map(z), fmap(x, y, f), fmap(y, z, g)))
  fmap_respect_id: (x: dom.Object) -> Equal(cod.Morphism(map(x), map(x)), fmap(x, x, dom.id(x)), cod.id(map(x)))
}: Type 
class {
  dom: class {
    Object: Type
    Morphism: (dom: Object, cod: Object) -> Type
    id: (x: Object) -> Morphism(x, x)
    compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
    id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
    id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
    compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, y, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
  }
  cod: class {
    Object: Type
    Morphism: (dom1: Object, cod: Object) -> Type
    id: (x: Object) -> Morphism(x, x)
    compose: (x: Object, y: Object, z: Object, f: Morphism(x, y), g: Morphism(y, z)) -> Morphism(x, z)
    id_left: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, x, y, id(x), f), f)
    id_right: (x: Object, y: Object, f: Morphism(x, y)) -> Equal(Morphism(x, y), compose(x, y, y, f, id(y)), f)
    compose_associative: (x: Object, y: Object, z: Object, w: Object, f: Morphism(x, y), g: Morphism(y, z), h: Morphism(z, w)) -> Equal(Morphism(x, w), compose(x, y, w, f, compose(y, z, w, g, h)), compose(x, z, w, compose(x, y, z, f, g), h))
  }
  map: (x: dom.Object) -> cod.Object
  fmap: (x: dom.Object, y: dom.Object, f: dom.Morphism(x, y)) -> cod.Morphism(map(x), map(y))
  fmap_respect_compose: (x: dom.Object, y: dom.Object, z: dom.Object, f: dom.Morphism(x, y), g: dom.Morphism(y, z)) -> Equal(cod.Morphism(map(x), map(z)), fmap(x, z, dom.compose(x, y, z, f, g)), cod.compose(map(x), map(y), map(z), fmap(x, y, f), fmap(y, z, g)))
  fmap_respect_id: (x: dom.Object) -> Equal(cod.Morphism(map(x), map(x)), fmap(x, x, dom.id(x)), cod.id(map(x)))
}: Type 
