import { Category } from "category/category.cic"
import { Isomorphism } from "category/isomorphism.cic"

class Groupoid extends Category {
  inv(x: Object, y: Object, f: Morphism(x, y)): Morphism(y, x)

  // NOTE The following use of `Isomorphism`
  //   is an example of "partly fulfilled object construction".
  inv_iso(x: Object, y: Object, f: Morphism(x, y)): Isomorphism(super, x, y, f, inv(x, y, f))
}

class GroupoidLexicalScopeTest extends Category {
  inv(x: Object, y: Object, f: Morphism(x, y)): Morphism(y, x)

  // NOTE `super` should repsect lexical scope,
  ///  the `id` in `super` should be different from the `id` in current scope.
  inv_iso(id: Object, y: Object, f: Morphism(id, y)): Isomorphism(super, id, y, f, inv(id, y, f))
}
